/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * NewJFrame.java
 *
 * Created on Jun 26, 2015, 9:53:07 AM
 */
package longtest;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.InputStreamReader;
import java.io.ObjectInputStream;
import javax.swing.JOptionPane;

/**
 *
 * @author longnt
 */
public class Main extends javax.swing.JFrame {

    /** Creates new form NewJFrame */
    public Main() {
        initComponents();
    }

    public void run() {
        int a  = 0;
        try {
            String line;
            Process p = Runtime.getRuntime().exec("tasklist.exe");
            BufferedReader input = new BufferedReader(new InputStreamReader(p.getInputStream()));
            while ((line = input.readLine()) != null) {
              //  System.out.println(line);
               if(line.startsWith("HKTServer")){
                   a++;
               }
            }
            input.close();
            if(a==2){
                System.exit(0);
            }
        } catch (Exception e) {
        }

        try {
            if (CheckOS.isWindows()) {
//                String str = this.getClass().getResource("").getPath().substring(5);
//                File file = new File(str.substring(0, str.indexOf("bin")) + "bin\\pos.bat");
//                String aa= file.getAbsolutePath().replaceAll("%20", " ");
//                String[] processCommand = { "cmd", "/c", aa };
//
//                Runtime.getRuntime().exec(processCommand);
                
                String str = readData("setup")+ "\\server\\bin\\webserver.vbs";
                File file = new File(str);
                String aa = file.getAbsolutePath().replaceAll("%20", " ");
                String[] processCommand = {"cmd", "/c", aa};

                Runtime r = Runtime.getRuntime();
                r.exec(processCommand);

            }
            // JOptionPane.showMessageDialog(null, CheckOS.isUnix());
            if (CheckOS.isUnix()) {
                String str = readData("setup")+ "\\HKT Software 4.0\\server\\bin\\webserver.sh";
                File file = new File(str);
                Runtime.getRuntime().exec(new String[]{"/bin/sh", "-c", "chmod +x webserver.sh"});
                Runtime.getRuntime().exec(new String[]{"/bin/sh", "-c", file.getPath()});
            }


        } catch (Exception e) {
        }
    }
    
    private String readData(String data) {
        try {
            FileInputStream fi = new FileInputStream(getFile("Database", data));
            ObjectInputStream of = new ObjectInputStream(fi);
            String str = of.readObject().toString();
            of.close();
            return str;
        } catch (Exception e) {
            return "";
        }
    }
    
     public File getFile(String module, String nameFile) {
        String directory = defaultDirectory() + File.separator
                + "HKTSoft4.0" + File.separator + module;
        if (!new File(directory).exists()) {
            new File(directory).mkdirs();
        }
        String path = directory + File.separator + nameFile;;
        return new File(path);
    }

    private String defaultDirectory() {
        String OS = System.getProperty("os.name").toUpperCase();
        if (OS.contains("WIN")) {
            return "C:";
        } else if (OS.contains("MAC")) {
            return System.getProperty("user.home") + "/Library/Application "
                    + "Support";
        } else if (OS.contains("NUX")) {
            return System.getProperty("user.home");
        }
        return System.getProperty("user.dir");
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new Main().run();
            }
            
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
